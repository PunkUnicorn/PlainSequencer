//using PactTests;
//using PlainSequencer;
//using PlainSequencer.Script;
//using PlainSequencer.SequenceItemActions;
//using System;
//using System.Collections.Generic;
//using System.Linq;
//using Xunit;

//namespace PactTests_OpenTests
//{
//    public class HttpSequencer_SequenceItemDispatcher
//    {
//        private readonly PortAllocationFixture mrPorty = new PortAllocationFixture(5000);
//        public Func<int> GetAvailablePort => mrPorty.GetAvailablePort;

//        private ConsumeHttpSequencerPact ConsumeTestYamlPact { get; }
//        private int Port { get; }

//        private SequenceItem testSequenceItem { get; } = null;

//        public HttpSequencer_SequenceItemDispatcher()
//        {
//            Port = GetAvailablePort();
//            var consumerName = $"{nameof(HttpSequencer_SequenceItemDispatcher)}Consumer";
//            ConsumeTestYamlPact = new ConsumeHttpSequencerPact(consumerName, Port);
//            ConsumeTestYamlPact.MockProviderService.ClearInteractions();
//            testSequenceItem = new SequenceItem
//            {
//                name = "some-request",
//                //breadcrumb = "{{sequence_item.send.url}}",
//                max_retries = 1,
//                http = new Http
//                {
//                    header = new NamedStringList { new KeyValuePair<string, string>("Accept", "application/json") },
//                    method = "GET",
//                    url = $"http://localhost:{Port}/second/" + "{{model.Id}}"
//                }
//            };
//        }

//        [Fact]
//        public void ExpectFailAndRetry()
//        {
//            /* 𝓐𝓻𝓻𝓪𝓷𝓰𝓮... */
//            SharedPactScafolding.BuildFailConsumerForId(ConsumeTestYamlPact, "00000001");

//            var processorOptions = new ProcessSequenceItem.Options
//            {
//                state = new RunState { YamlScript = new YamlScript { sequence_items = new[] { testSequenceItem }.ToList() } },
//                parent = null,
//                model = new { Id = "00000001" },
//                sequenceItem = testSequenceItem,
//                breadcrumbs = new Stack<KeyValuePair<string, ISequenceItemAction>>()
//            };


//            /* 𝓐𝓬𝓽 */
//            var actualRetryAfterResult = new Stack<ISequenceItemAction>();

//            var processor = new ProcessSequenceItem(processorOptions);
//            var actualResult = processor.ProcessSequenceItemAsync(actualRetryAfterResult).Result;


//            /* 𝓐𝓼𝓼𝓮𝓻𝓽 */
//            ConsumeTestYamlPact.MockProviderService.VerifyInteractions();

//            Assert.False(actualResult);

//            Assert.Same(testSequenceItem, actualRetryAfterResult.Single().SequenceItem);

//            Assert.Contains(actualRetryAfterResult,
//                item => (item as ISequenceItemActionRun).ActionExecuteCount == 2);
//        }

//        [Fact]
//        public void ExpectSuccess()
//        {
//            /* 𝓐𝓻𝓻𝓪𝓷𝓰𝓮... */
//            SharedPactScafolding.BuildSuccessConsumerForId(ConsumeTestYamlPact, "00000001");

//            var processorOptions = new ProcessSequenceItem.Options
//            {
//                state = new RunState { YamlScript = new YamlScript { sequence_items = new[] { testSequenceItem }.ToList() } },
//                parent = null,
//                model = new { Id = "00000001" },
//                sequenceItem = testSequenceItem,
//                breadcrumbs = new Stack<KeyValuePair<string, ISequenceItemAction>>()
//            };

//            /* 𝓐𝓬𝓽 */
//            var actualRetryAfterResult = new Stack<ISequenceItemAction>();

//            var processor = new ProcessSequenceItem(processorOptions);
//            var actualResult = processor.SequenceItemDispatcherAsync(actualRetryAfterResult).Result;

//            /* 𝓐𝓼𝓼𝓮𝓻𝓽 */
//            ConsumeTestYamlPact.MockProviderService.VerifyInteractions();

//            Assert.True(actualResult.IsSuccess);

//            Assert.Empty(actualRetryAfterResult);
//        }
//    }
//}
